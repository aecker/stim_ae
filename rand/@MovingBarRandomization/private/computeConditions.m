function r = computeConditions(r,params)
% Compute condition pool.
% AE 2007-10-05

r.conditionPool = ones(1,r.initMapTrials);
r.conditions = struct('prior',NaN, ...
                      'subBlock',NaN, ...
                      'direction',NaN, ...
                      'isMapping',true, ...
                      'isInitMapping',true);

nPriors = length(params.prior);
for i = 1:nPriors
    for j = 1:r.numSubBlocks
        
        m = r.movingTrials;
        n = round(m * params.prior(i));
        cond = 3 * (r.numSubBlocks * (i-1) + (j-1)) + 1;
        dirs = [repmat(cond+1,1,n), repmat(cond+2,1,m-n)];
        r.conditionPool = [r.conditionPool, ...
            [dirs(randperm(m)), repmat(cond+3,1,r.mapTrials)]];
        
        % conditions
        r.conditions(cond+1) = struct('prior',params.prior(i), ...
                                      'subBlock',j, ...
                                      'direction',0, ...
                                      'isMapping',false, ...
                                      'isInitMapping',false);
        r.conditions(cond+2) = struct('prior',params.prior(i), ...
                                      'subBlock',j, ...
                                      'direction',1, ...
                                      'isMapping',false, ...
                                      'isInitMapping',false);
        r.conditions(cond+3) = struct('prior',params.prior(i), ...
                                      'subBlock',j, ...
                                      'direction',NaN, ...
                                      'isMapping',true, ...
                                      'isInitMapping',false);
    end
end


