function r = init(r,varargin)
% AE 2008-09-03

% parameters which are randomized
r.conditions = struct('isFlash',{},'isMoving',{},'isStop',{}, ...
    'flashLocation',{}, 'barColor',{},'trajectoryAngle',{}, ...
    'direction',{},'dx',{});

for i = 1:size(r.barColor,2)
    for j = 1:size(r.trajectoryAngle,2);
        
        % flashes
        nLocs = r.numFlashLocs;
        r.conditions(end+(1:nLocs)) = ...
            struct('isFlash',1, ...
                   'isMoving',0, ...
                   'isStop',0, ...
                   'flashLocation',mat2cell(1:nLocs,1,ones(1,nLocs)), ...
                   'barColor',r.barColor(:,i), ...
                   'trajectoryAngle',r.trajectoryAngle(j), ...
                   'direction',NaN, ...
                   'dx',NaN);
               
        % moving bars
        for k = 1:size(r.dx,2)
            for l = 1:size(r.direction,2)
                r.conditions(end+1) = ...
                    struct('isFlash',0, ...
                           'isMoving',1, ...
                           'isStop',0, ...
                           'flashLocation',NaN, ...
                           'barColor',r.barColor(:,i), ...
                           'trajectoryAngle',r.trajectoryAngle(j), ...
                           'direction',r.direction(l), ...
                           'dx',r.dx(k));
                if r.flashStop
                    r.conditions(end+(1:nLocs)) = ...
                        struct('isFlash',0, ...
                               'isMoving',0, ...
                               'isStop',1, ...
                               'flashLocation',mat2cell(1:nLocs,1,ones(1,nLocs)), ...
                               'barColor',r.barColor(:,i), ...
                               'trajectoryAngle',r.trajectoryAngle(j), ...
                               'direction',r.direction(l), ...
                               'dx',r.dx(k));
                end
            end
        end
    end
end

% initialize WhiteNoiseRandomization on condition indices
r.white = init(WhiteNoiseRandomization,1:length(r.conditions));
